# - id: letsencrypt-renewal-30d-before-expiry
#   alias: Let's Encrypt Renewal at 15 Days before expiration
#   initial_state: 'on'
#   trigger:
#   - platform: numeric_state
#     entity_id: sensor.ssl_certificate_expiry
#     below: 15
#     for:
#       minutes: 20
#   action:
#   - service: notify.hassnico_bot
#     data_template:
#       message: '"Let's Encrypt CA must be Renewed. Expiry date is at 30 Days from
#         now"'
#   - service: hassio.addon_restart
#     data:
#       addon: core_letsencrypt
#   - service: notify.hassnico_bot
#     data_template:
#       message: '"Let's Encrypt CA was Renewed"'
#   - delay: 00:10:00
#   - service: script.restart_ha
#   - service: notify.hassnico_bot
#     data:
#       message: HA - Restart - Triggered - After CA Renew

- alias: Coffe Greetings - Notification 
  id: coffe-greetings-notify
  initial_state: 'on'
  trigger:
    # platform: template
    # value_template: "{{ state_attr('sensor.shelly_shplg_s_04169c_current_consumption', 'consumption')|int > 1000 }}"
    platform: numeric_state
    entity_id: sensor.shelly_shplg_s_04169c_current_consumption
    above: 1000
    for:
      seconds: 6
  action:
  - service: notify.hassnico_bot
    data:
      message: Qualcuno sta facendo il Caffè
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.nico_bose_home
  #     volume_level: 0.25
  - delay: 00:00:20
  #- service: script.cucinacoffe
  - service: script.cast_on_kitchen
  - service: notify.alexa_media
    data:
      target:
      # - media_player.nico_bose_home
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        {{ [ 
         "Spero che il Caffè sia buono",
         "Spero che il Caffè sia di tuo gradimento",
         "Nespresso o Borbone, questo è il problema!",
         "Oh che bello caffè",
         "Ci vuole proprio una bella pausa caffè",
         "Non c’è niente di meglio di una tazza di caffè",
         "All you need is Coffee",
        ] | random }}


- id: scene-washing-machine-working-notify
  alias: Washing Machine is Working - Notification
  initial_state: 'on'
  trigger:
    # platform: template
    # value_template: "{{ state_attr('sensor.shelly_shplg_s_5b2502_current_consumption', 'consumption')|int > 200 }}"
    platform: numeric_state
    entity_id: sensor.shelly_shplg_s_5b2502_current_consumption
    above: 250
    for:
      seconds: 6
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.washing_machine_state
      option: Working


- id: scene-washing-machine-working
  alias: Washing Machine is Working - Notification
  trigger:
    platform: state
    entity_id: input_select.washing_machine_state
    to: Working
  action:
  - service: notify.hassnico_bot
    data_template:
      message: 'Washing Machine is : {{ trigger.to_state.state }}'
  - service: notify.hassnico_bot
    data:
      message: La Lavatrice è in Funzione
  - service: notify.alexa_media
    data:
      target:
      # - media_player.nico_bose_home
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        {{ [ 
        "La Lavatrice è in funzione, Ricordati di verificare se ci sono altri elettrodomestici accesi",
        "Si avverte la gentile clientela che la lavatrice è iniziata, si prega di verificare che altri elettrodomestici ad alto consumo non siano attivi",
        "La Lavatrice è in funzione, verifica anche se ci sono altri elettrodomestici in funzione",
        "Era proprio l'ora di fare la lavatrice, ti volevo ricordare di fare un controllo se anche altri elettrodomestici sono attivi.",
        ] | random }}
  - service: script.cast_on_kitchen

- id: scene-washing-machine-off-notify
  alias: Washing Machine Scene Power Off - Notification
  initial_state: 'on'
  trigger:
    # platform: template
    # value_template: "{{ state_attr('sensor.shelly_shplg_s_5b2502_current_consumption', 'consumption')|int < 25 }}"
    platform: numeric_state
    entity_id: sensor.shelly_shplg_s_5b2502_current_consumption
    below: 26
    for:
      minutes: 1
      seconds: 10
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.washing_machine_state
      option: Power Off

- id: scene-washing-machine-poweroff
  alias: Washing Machine Power off- Notification
  trigger:
    platform: state
    entity_id: input_select.washing_machine_state
    to: Power Off
  action:
  - service: notify.hassnico_bot
    data_template:
      message: 'Washing Machine is : {{ trigger.to_state.state }}'
  - service: notify.hassnico_bot
    data:
      message: La Lavatrice è finita
  - service: notify.alexa_media
    data:
      target:
      # - media_player.nico_bose_home
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        '{{ [ 
        "La Lavatrice è finita, ora bisogna stendere i panni",
        "La lavatrice ha terminato il lavaggio",
        "La lavatrice è finita, chi stende i panni?",
        "I panni li stende Nico o li stende Maria? Questo è il problema",
        ] | random }}'
  - service: script.cast_on_kitchen

- alias: Energy Alarm - Notification
  id: 12181a719f5f4473916149f7ce20502b
  initial_state: 'on'
  trigger:
    # platform: template
    # value_template: "{{ state_attr('sensor.shelly_shem_b9ee2d_1_current_consumption', 'consumption')|int > 100 }}"
    platform: numeric_state
    entity_id: sensor.shelly_shem_b9ee2d_1_current_consumption
    above: 3200
    for:       
      minutes: 10
    # below: 25
  action:
  - service: notify.hassnico_bot
    data:
      message: Sta per scattare la corrente a casa
  - service: media_player.volume_set
    data:
      entity_id: media_player.nico_bose_home
      volume_level: 0.35
  - service: notify.alexa_media
    data:
      target:
      - media_player.nico_bose_home
      data:
        type: tts
      message: >
         '{{ [ 
         "Il consumo energetico sta per superare il limite consentito, verificare se sono accesi troppi elettrodomestici prima che scatti la corrente perfavore",
         "Perfavore controllate i consumi energetici, si sta superando la soglia consentita, potrebbe scattare la corrente",
         "Sta per scattare la corrente, perfavore controllare i dispositivi accesi in casa",
         ] | random }}'

- alias: Nico is Driving - Notification
  initial_state: 'on'
  trigger:
    platform: template
    value_template: "{{ state_attr('device_tracker.sm_g950f', 'velocity')|int >= 50 }}"
    for:
      seconds: 20
  action:
  - service: notify.hassnico_bot
    data:
      message: Nico is Driving
  - service: script.alexatraffic2
  id: f5d2b6ae95cc4cb893b890b3ff4cc0ce

- id: light-self-shutdown
  alias: Lights Self Shutdown
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - switch.shelly_shsw_25_687269_1
    - switch.shelly_shsw_25_687269_2
    to: 'on'
    for: 00:30:00
  - platform: state
    entity_id:
    - switch.shelly_shsw_25_e5e601_1
    - switch.shelly_shsw_25_e5e601_2
    to: 'on'
    for: 01:15:00
  - platform: state
    entity_id:
    - switch.shelly_shsw_25_686d62_1
    - switch.shelly_shsw_25_686d62_2
    - switch.shelly_shsw_25_68796e_1
    - light.shelly_shsw_25_68796e_1
    - switch.shelly_shsw_25_68796e_2
    - light.shelly_shsw_25_68796e_2
    to: 'on'
    for: 02:00:00
  action:
  - service: switch.turn_off
    data_template:
      entity_id: '{{ trigger.entity_id }}'
  - service: notify.hassnico_bot
    data_template:
      message: '"{{ trigger.to_state.attributes.friendly_name }} just changed from
        {{ trigger.to_state.state }} to {{ trigger.from_state.state }}. Self Shutdown!"'
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.nico_bose_home
  #     volume_level: 0.3
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        '{{ [
        "La Luce si è spenta automaticamente",
        "Risparmio Energetico Attivato da Home Assistant, la luce si è spenta",
        "La luce si è spenta",        
        ] | random }}'

- id: camera-self-turn_on
  alias: Video Camera Self Turn On
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - switch.ciabatta_rack_fritz_dect_200_1
    to: 'off'
    for: 00:45:00
  action:
  - service: switch.turn_on
    data_template:
      entity_id: '{{ trigger.entity_id }}'
  - service: notify.hassnico_bot
    data_template:
      message: '"{{ trigger.to_state.attributes.friendly_name }} just changed from
        {{ trigger.to_state.state }} to {{ trigger.from_state.state }}. Self Turn on!"'


- id: midnight-routine-shutdown
  alias: Turn off Light and Nesthub at Midnight
  initial_state: 'on'
  trigger:
    platform: time
    at: '23:59:00'
  action:
    - service: homeassistant.turn_off
      entity_id: group.lights
    - service: media_player.turn_off
      entity_id: media_player.cucina

- id: light-on-at-entrance-after-sunset
  alias: Turn on Light After Sunset - All Days - when Family group at Home
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: group.family
    to: home
  condition:
    condition: or
    conditions:
    - condition: sun
      after: sunset
    - condition: sun
      before: sunrise
  action:
  - service: switch.turn_on
    entity_id: switch.shelly_shsw_25_68796e_1  #luci salone 1
  - service: switch.turn_on
    entity_id: switch.shelly_shsw_25_68796e_2 #luci cucina 2
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        '{{ [ 
        "Luci di benvenuto attivate",
        "Luci di benvenuto attive",
        "Luci di cortesia attive",
        ] | random }}'
  - service: notify.hassnico_bot
    data_template:
      message: '"Qualcuno è tornato/a a casa e sono state accese le luci di benvenuto"'

- id: light-on-sunset
  alias: Light on Sunset
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: "-00:59:00"
  condition:
    condition: state
    entity_id: group.family
    state: 'home'
  action:
  - service: homeassistant.turn_on
    entity_id: switch.shelly_shsw_25_686d62_2
  - service: notify.hassnico_bot
    data:
      message: Sunset - Lights ON at {{ states('sensor.date_time') }}
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.nico_bose_home
  #     volume_level: 0.3
  - delay: 00:00:02
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
       '{{ [
       "Le luci sono state accese al tramonto",
       "Casa era poco illuminata ed ho pensato di accendere le luci",
       "Le luci sono state accese perchè era poco illuminato",
        ] | random }}'

- id: notify-update
  alias: Update Available Notifications
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.updater
    from: 'off'
    to: 'on'
  action:
    service: notify.hassnico_bot
    data:
      message: Home Assistant {{ state_attr('binary_sensor.updater', 'newest_version') }} is available.

- id: bad-logins
  alias: Login Failure
  initial_state: 'on'
  trigger:
    platform: template
    value_template: "{{ states('persistent_notification.httplogin') != 'authentication' }}"
  action:
    service: notify.hassnico_bot
    data:
      message: Bad Login.. There was a Hack attempt! Go Check the GUI for details.

- id: notify-today-chef
  alias: Who Cook
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.who_cooks
  action:
  - service: notify.hassnico_bot
    data_template:
      message: "Today Cook {{ trigger.to_state.state }}"

- id: notify-nico-battery-low
  alias: Nico Battery Low - Notification
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.batteria_telefono_nico
    above: 0
    below: 36
  action:
  - service: notify.hassnico_bot
    data:
      message: Nico's Telephone is on low Battery at {{ states('sensor.date_time')
        }}
  - service: notify.hassnico_bot
    data:
      message: Nico's Telephone Battery Level is {{ states('sensor.batteria_telefono_nico')
        }}%

- id: notify-mamma-battery-low
  alias: Mamma Battery Low - Notification
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.batteria_telefono_mamma
    above: 0
    below: 36
  action:
  - service: notify.hassnico_bot
    data:
      message: Mom's Telephone is on low Battery at {{ states('sensor.date_time')
        }}
  - service: notify.hassnico_bot
    data:
      message: Mom's Telephone Battery Level is {{ states('sensor.batteria_telefono_mamma')
        }}%

- id: notify-hass-start
  alias: Home Assistant Start - Notify
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: start
  action:
  - service: notify.hassnico_bot
    data:
      message: Home Assistant Start at {{ states('sensor.date_time') }}
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.nico_bose_home
  #     volume_level: 0.3
  - delay: 00:00:02
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        '{{ [
        "Home Assistant è nuovamente disponibile",
        "Home Assistant è operativo",
        "Home assistant is back piccole bibbi",
        "Sono nuovamente operativa",
        "Signori e Signore Ladies and Gentlement Home assistant è nuovamente operativo",
        "Home assistant è avviato",
        ] | random }}'
  - service: recorder.purge
    data:
      keep_days: 7
      repack: true
  # - service: google_assistant.request_sync
  # - service: notify.hassnico_bot
  #   data:
  #     message: Google Assistant Sync at {{ states('sensor.date_time') }}
  - service: script.cast_on_kitchen


- id: notify-hass-stop
  alias: Home Assistant Stop - Notify
  initial_state: 'on'
  trigger:
    platform: event
    event_type: homeassistant_stop
  action:
    service: notify.hassnico_bot
    data:
      message: Home Assistant Stop at {{ states('sensor.date_time') }}

- id: zone-mamma-home
  alias: Mamma at Home - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: enter
    zone: zone.home
    entity_id: device_tracker.mamma_mamma
  action:
    service: notify.hassnico_bot
    data:
      message: Mamma is at Home at {{ states('sensor.date_time') }}

- id: zone-mamma-out-home
  alias: Mamma Outside Home - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: leave
    zone: zone.home
    entity_id: device_tracker.mamma_mamma
  action:
    service: notify.hassnico_bot
    data:
      message: Mamma is going out at {{ states('sensor.date_time') }}

- id: zone-maria-home
  alias: Maria at Home - Notification
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: person.maria
    from: not_home
    to: home
  action:
  - service: notify.hassnico_bot
    data:
      message: Maria is at Home {{ states('sensor.date_time') }}
  - delay:
      seconds: 30
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.nico_bose_home
  #     volume_level: 0.35
  - delay: 00:00:02
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        '{{ [ 
        "Bentornata a casa Maria",
        "Bentornata",
        "Ciao Mascia",
        "Sei bellissima oggi, è un piacere rivederti",
        "Sono felice di rivederti",
        "è un piacere averti qui",
        "Un membro della gang è a casa",
        "Welcome to the candy shop",
        "Mascia finalmente sei a casa",
        "Ci sei mancata Mascia, spero che la giornata sia andata bene",
        "Sono felicissima di vederti Mascia, come stai?",
        "La regina Mascia è a casa",
        "Sua Maestà sono felicissima di rivederla",
        "Mascia, stare qui non aveva senso senza di te. Ben Tornata!",
        ] | random }}'
  # - service: rest_command.ss_home_on
  # - service: rest_command.ss_preset_home
  # - delay:
  #     seconds: 10
  # - service: rest_command.ss_preset_living
  # - delay:
  #     seconds: 10
  # - service: rest_command.ss_preset_bedroom
  # - delay:
  #     seconds: 10
  # - service: rest_command.ss_preset_home

- id: zone-maria-out-home
  alias: Maria Outside Home - Notification
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.iphone
    to: not_home
    for: 00:05:00
  action:
  - service: notify.hassnico_bot
    data:
      message: Maria is going out at {{ states('sensor.date_time') }}

- id: zone-konstantin-home
  alias: Konstantin at Home - Notification
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.galaxy_s10e
    from: not_home
    to: home
  action:
  - service: notify.hassnico_bot
    data:
      message: Konstantin is at Home {{ states('sensor.date_time') }}
  - delay:
      seconds: 30
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.nico_bose_home
  #     volume_level: 0.35
  - delay: 00:00:02
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        '{{ [ 
        "Ciao Konstantin",
        "Bentornato Konstantin",
        "Ciao Konstantin",
        "Ciao Costantino",
        ] | random }}'

- id: zone-natascia-home
  alias: Natascia at Home - Notification
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.galaxy_note10
    from: not_home
    to: home
  action:
  - service: notify.hassnico_bot
    data:
      message: Konstantin is at Home {{ states('sensor.date_time') }}
  - delay:
      seconds: 30
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.nico_bose_home
  #     volume_level: 0.35
  - delay: 00:00:02
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        '{{ [ 
        "Ciao Natascia",
        "Bentornata Natascia",
        ] | random }}'

- id: zone-nico-home
  alias: Nico at Home - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    entity_id: person.nico
    zone: zone.home
    event: enter
  condition:
    condition: time
    after: 07:00:00
    before: '23:59:00'
  action:
  - service: notify.hassnico_bot
    data:
      message: Nico is at Home at {{ states('sensor.date_time') }}
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.echo_dot_di_nicolo
  #     volume_level: 0.35
  - delay: 00:00:03
  - service: notify.alexa_media
    data:
      target:
      - media_player.echo_dot_di_nicolo
      data:
        type: tts
      message: > 
        '{{ [ 
        "Nico è a casa di Mamma",
        "Nico è arrivato da Mamma",
        "Nico è andato a trovare la Mamma",
        "Wooow, Rossella è felicissima di vedere Nico",
        "Il boss è dalla mamma",
        ] | random }}'

- id: zone-nico-out-home
  alias: Nico is going out - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    entity_id: device_tracker.sm_g950f
    zone: zone.home
    event: leave
  condition:
    condition: time
    after: 07:00:00
    before: '23:59:00'
  action:
  - service: notify.hassnico_bot
    data:
      message: Nico is going out from Home at {{ states('sensor.date_time') }}

- id: zone-nico-casetta
  alias: Nico at Home - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    entity_id: device_tracker.sm_g950f
    zone: zone.casetta
    event: enter
  condition:
    condition: time
    after: 07:00:00
    before: '23:59:00'
  action:
  - service: notify.hassnico_bot
    data:
      message: Nico is at Casetta at {{ states('sensor.date_time') }}

- id: zone-nico-casetta2
  alias: Nico at Home 2 - Notification
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.sm_g950f
    from: not_home
    to: home
  action:
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.nico_bose_home
  #     volume_level: 0.3
  - delay: 00:00:02
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        '{{ [
        "Bentornato a casa Nico",
        "Nico sei finalmente a casa",
        "Si sente la differenza senza di te. Mi sei mancato",
        "Ci sei mancato",
        "Nico, ci sei mancato tantissimo",
        "Nico, Siamo felicissimi di vederti",
        "Ladies and Gentlement, Signori e Signore, Il boss è a casa",
         ] | random }}'
  - service: rest_command.ss_home_on
  - service: rest_command.ss_preset_home
  - delay:
      seconds: 10
  - service: rest_command.ss_preset_living
  - delay:
      seconds: 10
  - service: rest_command.ss_preset_bedroom
  - delay:
      seconds: 10
  - service: rest_command.ss_preset_home

- id: zone-nico-out-casetta
  alias: Nico is going out - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    entity_id: device_tracker.sm_g950f
    zone: zone.casetta
    event: leave
  condition:
    condition: time
    after: 07:00:00
    before: '23:59:00'
  action:
  - service: notify.hassnico_bot
    data:
      message: Nico is going out from Casetta at {{ states('sensor.date_time') }}
  - service: script.alexatraffic2
  - service: rest_command.ss_preset_home
  - delay:
      seconds: 10
  - service: rest_command.ss_preset_living
  - delay:
      seconds: 10
  - service: rest_command.ss_preset_bedroom
  - delay:
      seconds: 10
  - service: rest_command.ss_preset_home

- id: zone-nico-dad-home
  alias: Nico at Papa's Home - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: enter
    zone: zone.papa
    entity_id: device_tracker.sm_g950f
  action:
    service: notify.hassnico_bot
    data:
      message: Nico is at Papa's Home at {{ states('sensor.date_time') }}

- id: zone-nico-out-dad-home
  alias: Nico leaving Papa's Home - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: leave
    zone: zone.papa
    entity_id: device_tracker.sm_g950f
  action:
    service: notify.hassnico_bot
    data:
      message: Nico is going out from Papa's Home {{ states('sensor.date_time') }}

- id: zone-nico-work
  alias: Nico at Work - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: enter
    zone: zone.work
    entity_id: device_tracker.sm_g950f
  condition:
    condition: time
    after: 07:00:00
    before: '20:00:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: notify.hassnico_bot
    data:
      message: Nico at Work at {{ states('sensor.date_time') }}

- id: zone-nico-work-tigre
  alias: Nico at Work (Tigre) - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: enter
    zone: zone.tigre
    entity_id: device_tracker.sm_g950f
  condition:
    condition: time
    after: 07:00:00
    before: '20:00:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: notify.hassnico_bot
    data:
      message: Nico at Work at {{ states('sensor.date_time') }}

- id: zone-nico-out-work
  alias: Nico out from Work - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: leave
    zone: zone.work
    entity_id: device_tracker.sm_g950f
  condition:
    condition: time
    after: 07:00:00
    before: '20:00:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: notify.hassnico_bot
    data:
      message: Nico is going out from Work at {{ states('sensor.date_time') }}

- id: zone-nico-out-tigre
  alias: Nico out from Work (Tigre)) - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: leave
    zone: zone.tigre
    entity_id: device_tracker.sm_g950f
  condition:
    condition: time
    after: 07:00:00
    before: '20:00:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: notify.hassnico_bot
    data:
      message: Nico is going out from Work at {{ states('sensor.date_time') }}

- id: notify-sunrise
  alias: Notify on sunrise
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunrise
    offset: "+00:00:00"
  action:
  - service: notify.hassnico_bot
    data:
      message: Beautiful sunrise!
  - service: notify.hassnico_bot
    data:
      message: The sun is up. Wake Up! {{ states('sensor.date_time') }}


- id: notify-sunset
  alias: Notify on sunset
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: "-00:59:00"
  action:
  - service: notify.hassnico_bot
    data:
      message: Beautiful sunset!
  - service: notify.hassnico_bot
    data:
      message: Oh wow you really missed something great. {{ states('sensor.date_time')
        }}
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.nico_bose_home
  #     volume_level: 0.3
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        '{{ [ 
        "C'è un tramonto meraviglioso oggi, affacciati alla finestra",
        "Che ne pensi del tramonto di oggi? Non è Bellissimo?",
        ] | random }}'

- id: pc-restart
  alias: pc_restart
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: Restart
  action:
  - service: shell_command.restart_pc
  - service: notify.hassnico_bot
    data:
      message: PC Restart at {{ states('sensor.date_time') }}
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.nico_bose_home
  #     volume_level: 0.3
  - service: script.alexascriptpcrestart

- id: pc-shutdown
  alias: pc_shutdown
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: Shutdown
  action:
  - service: shell_command.shutdown_pc
  - service: notify.hassnico_bot
    data:
      message: PC Shutdown at {{ states('sensor.date_time') }}
  # - service: media_player.volume_set
  #   data:
  #     entity_id: media_player.nico_bose_home
  #     volume_level: 0.3
  - service: script.alexascriptpcoff


- id: pc-sleep
  alias: pc_sleep
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: Sleep
  action:
  - service: shell_command.sleep_pc
  - service: notify.hassnico_bot
    data:
      message: PC Sleep at {{ states('sensor.date_time') }}


- id: pc-hibernate
  alias: pc_hibernate
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: Hibernate
  action:
  - service: shell_command.hibernate_pc
  - service: notify.hassnico_bot
    data:
      message: PC Hibernated at {{ states('sensor.date_time') }}


- id: TTS-flush-cache
  alias: Flush TTS Cache
  initial_state: 'on'
  trigger:
    platform: time
    at: '2:35:00'
  action:
    service: tts.clear_cache

- id: telegram-start
  alias: Telegram Start Command
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /start
  action:
  - service: notify.hassnico_bot
    data:
      message: "{{ [ \"Ciao, sono il tuo assistente di casa.. Ti elenco seguito la\
        \ lista dei comandi disponibili\", \"Come posso esserti utile?\", \"Yes Sir!\"\
        , \"Se proprio insisti, questa è la lista dei comandi\", \"Aaaaa.. ancora\
        \ qui?\", \"E' un piacere rivederti\" ] | random }}       \n"
      data:
        keyboard:
        - /nico, /mamma
        - /nicopcon, /nicopcoff, /nicopcreboot
        - /ping, /camera
        - /start, /cp

- alias: Telegram_Bot_Stop
  id: 26fb96b64f5240eea48a862116bbaf53
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /stop
  action:
  - service: notify.hassnico_bot
    data_template:
      message: '*Control Panel*'
      data:
        inline_keyboard:
        - 💡 Lights:/lights, 🚨 Security:/security
        - 💻 System:/system, 💻 Status:/status, Help:/help, Ping:/ping
        - 📄 Sommario:/Sommario, ☀ Weather:/weather
        - Addons:/addons


- id: telegram-camera-ss
  alias: Camera command
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /camera
  action:
  - service: notify.hassnico_bot
    data:
      message: E1 Pro - Salone - Snapshot
  - service: script.camera_snapshot

- id: telegram-ha-restart
  alias: Home Assistant restart
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /harestart
  action:
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: '{{ [ "Home Assistant si sta riavviando", "Riavvio Home Assistant",
        "Sto riavvando Home Assistant", "Riavvio Home Assistant", ] | random }}'
  - service: script.restart_ha
  - service: notify.hassnico_bot
    data:
      message: HA - Restart - Triggered

- id: telegram-nico-gps
  alias: GPS Notify Nico
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /nico
  action:
  - service: notify.hassnico_bot
    data:
      message: Nico GPS Position
  - service: script.nico_gps_notify_telegram

- id: telegram-mom-gps
  alias: GPS Notify Mom
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /mamma
  action:
  - service: notify.hassnico_bot
    data:
      message: Mom GPS Position
  - service: script.mamma_gps_notify_telegram

- id: telegram-ca-renew
  alias: Certificate Renew
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /certificate
  action:
  - service: script.letsencrypt_renew

- id: telegram-ping-pong
  alias: Telegram bot that reply pong to ping
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /ping
  action:
  - service: notify.hassnico_bot
    data:
      message: pong

- id: telegram-nico-pc-on
  alias: Telegram - Nico PC ON
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /nicopcon
  action:
  - service: notify.hassnico_bot
    data:
      message: >
        '{{ [
        "Il PC è stato accesso",
        "Accendero il tuo PC nel piu breve tempo possibile!",
        "Yes Sir! Accendo subito il PC",
        "Aaaaa.. vuoi nuovamente che accendo il PC? Quanto rompi!",
        "Hmmm.. ok dai ti accendo il PC",
        "3.. 2.. 1.. ON"
        ] | random }}'
  - service: switch.turn_on
    entity_id: switch.nico_computer

- id: telegram-nico-pc-off
  alias: Telegram - Nico PC OFF
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /nicopcoff
  action:
  - service: notify.hassnico_bot
    data:
      message: >
        '{{ [
        "Il PC è stato Spento",
        "Eddajee te lo spengooo",
        "Yes Sir! Spengo subito il PC",
        "Aaaaa.. vuoi nuovamente che spengo il PC? Quanto rompi!",
        "Hmmm.. ok dai ti spengo il PC",
        "3.. 2.. 1.. Off",
        ] | random }}'
  - service: shell_command.shutdown_pc

- id: telegram-nico-pc-reboot
  alias: Telegram - Nico PC Reboot
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /nicopcreboot
  action:
  - service: notify.hassnico_bot
    data:
      message: > 
        '{{ [
        "Il PC è stato Riavviato",
        "Eddajee te lo riavvio",
        "Yes Sir! Riavvio subito il PC",
        "Aaaaa.. vuoi nuovamente che riavvio il PC? Quanto rompi!",
        "Hmmm.. ok dai ti riavvio il PC",
        "3.. 2.. 1.. Reboot"
        ] | random }}'
  - service: shell_command.restart_pc

- id: telegram-control-pannel-start
  alias: Telegram Control Pannel Command
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /cp
  action:
  - service: notify.hassnico_bot
    data:
      message: "{{ [ \"Home Assistant Status\", \"Control Panel\", \"Yes Sir!\", \"\
        Home Assistant Control Panel\", \"Pannello di controllo\" ] | random }}  \
        \     \n"
      data:
        inline_keyboard:
        - 💡 Lights:/lights, 🚨 Security:/security
        - 💻 System:/system, ℹ Status:/status, Help:/help, Ping:/ping
        - 📄 Sommario:/Sommario, ☀ Weather:/weather
        - Addons:/addons

- id: telegram-ik-ping-pong
  alias: telegram ping pong
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /ping
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'Callback received from {{ trigger.event.data.from_first }}. Message
        id: {{ trigger.event.data.message.message_id }}. Data: {{ trigger.event.data.data
        }} {{now().strftime("%H:%M:%S %Y-%m-%d")}} Pong, Message from {{ trigger.event.data["user_id"]
        }}.'
      show_alert: true

- id: telegram-weather-info
  alias: Weather Info
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /weather
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Weather
  - service: notify.hassnico_bot
    data_template:
      message: '{{ "\U00002600" }} *Weather*:------------------------------------------------*Tempo*:   {{ states.sensor.dark_sky_summary_tmpl.state}}*Temp. Tomorrow Max/Min*:   {{ states.sensor.dark_sky_daytime_high_temperature_1d.state}}/{{
        states.sensor.dark_sky_overnight_low_temperature_1d.state}} °C*Forecasts*:   {{ states.sensor.dark_sky_hourly_summary_tmpl.state}}'
      data:
        inline_keyboard:
        - '{{ "\u21a9\ufe0f" }} Control Panel:/stop'

- id: telegram-system-status
  alias: System status
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /status
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: System Status
  - service: notify.hassnico_bot
    data_template:
      message: "\n{{ \"\\U0001F4BB\" }} *System*:\n------------------------------------------------\
        \        \n*CPU Usage*:   {{ states.sensor.processor_use.state }} %\n*CPU\
        \ Up Time*:   {{ states.sensor.uptime.state }} h\n*Last Reboot*:   {{ states.sensor.last_boot.state\
        \ }}\n*Temp CPU*:   {{ states.sensor.cpu_temp.state }} °C\n*Free Memory*:\
        \   {{ states.sensor.memory_free.state }} Mb\n*Memory Used*:   {{ states.sensor.memory_usage_real.state\
        \ }} %\n  "
      data:
        inline_keyboard:
        - '{{ "\u21a9\ufe0f" }} Control Panel:/stop'

- id: telegram-ik-security-alarm
  alias: Telegram Alarm
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /security
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Alarm control
  - service: telegram_bot.edit_message
    data_template:
      message_id: last
      chat_id: '{{ trigger.event.data.user_id }}'
      message: '{% if is_state("input_boolean.burglar_alarm_door", "off") %}Alarm
        is OFF. {% else %}Alarm is ON. {% endif %} {% if is_state("input_boolean.away_scene",
        "off") %}Presence simulation is OFF. {% else %}Presence simulation is ON.
        {% endif %}'
      inline_keyboard:
      - Away ON:/away_on, Away OFF:/away_off
      - Alarm ON:/alarm_on, Alarm OFF:/alarm_off, Cancel:/cancel

- alias: Want pizza?
  id: e16c9ed3708b4ed988bd3768f1d6505b
  trigger:
    platform: time
    at: '18:30:00'
  condition:
  - condition: state
    entity_id: person.maria
    state: home
  - condition: state
    entity_id: person.nico
    state: not_home
  action:
  - service: telegram_bot.send_message
    data_template:
      title: Want pizza?
      target: '{{ trigger.event.data.user_id }}'
      #-189154344
      message: You look like you are home alone. Should I order you a pizza?
      inline_keyboard:
      - Gimme Pizza:/gimmepizza
      - No thanks:/nopizza


- alias: No pizza
  id: 00aea60bf4df41ea873af5bb00914bf9
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /nopizza
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Ok, no pizza then


- alias: gimme pizza
  id: 2664ed6ab9d04317a20914ac195ea623
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /gimmepizza
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: PIZZA TIME
  - service: dominos.order
    data:
      order_entity_id: dominos.medium_pan


- alias: Lights Actions
  id: 395856c12a51458a8fcba2801af89a87
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /lights
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: What you want to do with Lights?
  - service: telegram_bot.send_message
    data_template:
      title: Lights ON or OFF?
      target: -189154344
      message: Look like you want to turn on or off your lights. What you want to
        do?
      inline_keyboard:
      - ALL ON:/lighton, Living ON:/Living_on, Bedroom ON:/bedroom_on
      - ALL OFF:/lightoff, Living OFF :/Living_off, Bedroom OFF:/bedroom_off
      - Kitchen ON:/kitchen_on, BathRoom ON:/bath_on
      - Kitchen OFF:/kitchen_off, BathRoom OFF:/bath_off


- alias: IK - Telegram - Light On
  id: de9c96983e0249dca7ff6a383cf3fee5
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /lighton
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Lights ON
  - service: switch.turn_on
    data:
      entity_id: group.lights


- alias: IK - Telegram - Light Off
  id: a385f2a51e974e7087abced292444f08
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /lightoff
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Lights OFF
  - service: switch.turn_off
    data:
      entity_id: group.lights


- alias: IK - Telegram - Living Light On
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /Living_on
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Living Lights ON
  - service: switch.turn_on
    data:
      entity_id: group.living
  id: 93819def968a4138a042b2c9914cdcab

- alias: IK - Telegram - Living Light OFF
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /Living_off
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Living Lights OFF
  - service: switch.turn_off
    data:
      entity_id: group.living
  id: 4a791d4879af458caa18cdaf07396fb4

- alias: IK - Telegram - Kitchen Light On
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /kitchen_on
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Kitchen Lights ON
  - service: switch.turn_on
    data:
      entity_id: group.kitchen
  id: d0db7a6136df4543a9cec7e48d3755e2

- alias: IK - Telegram - Kitchen Light OFF
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /kitchen_off
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Kitchen Lights OFF
  - service: switch.turn_off
    data:
      entity_id: group.kitchen  
  id: c9d0f4d9d33e46eeb08bd93e09d79b51

- alias: IK - Telegram - BedRoom Light On
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /bedroom_on
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: BedRoom Lights ON
  - service: switch.turn_on
    data:
      entity_id: group.bedroom
  id: a663b90a49864dfbb8e427077d0e7d38

- alias: IK - Telegram - BedRoom Light OFF
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /bedroom_off
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: BedRoom Lights OFF
  - service: switch.turn_off
    data:
      entity_id: group.bedroom
  id: a73bc62c02204d9a9dc2acc57fb30f98

- alias: IK - Telegram - BathRoom Light On
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /bath_on
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: BathRoom Lights ON
  - service: switch.turn_on
    data:
      entity_id: group.bathroom
  id: 84bbf8fc552e44b1841dd2d557baf6b1

- alias: IK - Telegram - BathRoom Light OFF
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /bath_off
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: BathRoom Lights OFF
  - service: switch.turn_off
    data:
      entity_id: group.bathroom
  id: 82c1eddb9a694237bf7fbc5ee6581843

- alias: HA System Actions
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /system
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: What actions you want to do on HA?
  - service: telegram_bot.send_message
    data_template:
      title: HA System Actions
      target: -189154344
      message: Look like you want to do something about your Home Assistant istance..
        What you want to do?
      inline_keyboard:
      - Check Config:/config, Automation Reload:/automreload
      - SSL certificate:/ssl, SSL Renew:/sslrenew
      - HA Restart:/harestart, Host Reboot:/hassioreboot
  id: cd77f15bdc134091bb724ff88c2209f2

- alias: IK - Telegram - Automation reload
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /automreload
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Automation Reload
  - service: script.reload_automations
  - service: notify.hassnico_bot
    data:
      message: Automation - Reload - Triggered
  id: fe7953d2058449c3ac8151413c59c52d

- alias: IK - Telegram - HA Restart
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /harestart
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: HA restart
  - service: script.restart_ha
  - service: notify.hassnico_bot
    data:
      message: HA - Restart - Triggered
  id: 21923d7d73e64125b52f19622304c15e

- alias: IK - Telegram - SSL Renew
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /sslrenew
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: SSL Renew
  - service: script.letsencrypt_renew
  - service: notify.hassnico_bot
    data:
      message: SSL - Renew - Triggered
  id: 5023c18fd0cb4ec2bd4ab9b40b270bdd

- alias: IK - Telegram - Host Reboot
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /hassioreboot
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Host Reboot
  - service: hassio.host_reboot
  - service: notify.hassnico_bot
    data:
      message: Host - Reboot - Triggered
  id: 4095dcaa857646dda279642d3af178c3

- alias: Addons Actions
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /addons
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: What you want to do with these addons?
  - service: telegram_bot.send_message
    data_template:
      title: Addons
      target: -189154344
      message: Look like you want to turn on or off your Addons. What you want to
        do?
      inline_keyboard:
      - Web SSH ON:/webssh_on, Pi-Hole ON:/pihole_on
      - Web SSH OFF:/webssh_off, Pi-Hole OFF:/pihole_off
      - IDE ON:/ide_on, LogViewer ON:/logview_on
      - IDE OFF:/ide_off, LogViewer OFF:/logview_off
      - NodeRed ON:/nodered_on, NodeRed OFF:/nodered__off
  id: 881d4f591f03455e94096c5dd98a4318

- alias: IK - Telegram - Addon SSH Web Start
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /webssh_on
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Addon SSH Web Start - Triggered
  - service: hassio.addon_start
    data:
      addon: a0d7b954_ssh
  - service: notify.hassnico_bot
    data:
      message: SSH Enabled... Web SSH is available at https://nico-casetta.duckdns.org:7681
  id: 2bb0cd84615945419aaed0a414f64dd5

- alias: IK - Telegram - Addon SSH Web Stop
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /webssh_off
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Addon SSH Web Stop - Triggered
  - service: hassio.addon_stop
    data:
      addon: a0d7b954_ssh
  - service: notify.hassnico_bot
    data:
      message: Addon SSH Web Stopped
  id: 2c66fce6802d4be28ec41fe08123d8f0

- alias: IK - Telegram - Addon  Log Viewer Start
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /logview_on
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Addon  Log Viewer Start - Triggered
  - service: hassio.addon_start
    data:
      addon: a0d7b954_logviewer
  - service: notify.hassnico_bot
    data:
      message: ' Log Viewer... Log Viewer is available at https://nico-casetta.duckdns.org:4277'
  id: 417fccccf3ba4d4eafa4b8a23724689a

- alias: IK - Telegram - Addon  Log Viewer Stop
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /logview_off
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Addon  Log Viewer Stop - Triggered
  - service: hassio.addon_stop
    data:
      addon: a0d7b954_logviewer
  - service: notify.hassnico_bot
    data:
      message: Addon  Log ViewerStopped
  id: ea7b80b540ed4c5c8d0b2c7208ca8509

- alias: IK - Telegram - Addon  Pi-Hole Start
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /logview_on
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Addon  Pi-Hole Start - Triggered
  - service: hassio.addon_start
    data:
      addon: a0d7b954_pi-hole
  - service: notify.hassnico_bot
    data:
      message: Pi-Hole is available at https://nico-casetta.duckdns.org:4277
  
  id: 42d79f34480347ada179654f3fd48eca
- alias: IK - Telegram - Addon  Pi-Hole Stop
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /logview_off
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Addon  Pi-Hole Stop - Triggered
  - service: hassio.addon_stop
    data:
      addon: a0d7b954_pi-hole
  - service: notify.hassnico_bot
    data:
      message: Addon  Pi-Hole Stopped
  
  id: 7d27cedd571942178b4e3fad4dd99c3e
- alias: IK - Telegram - Addon  IDE Start
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /ide_on
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Addon  IDE Start - Triggered
  - service: hassio.addon_start
    data:
      addon: a0d7b954_ide
  - service: notify.hassnico_bot
    data:
      message: IDE is available at https://nico-casetta.duckdns.org:4277
  id: 093c013d0af544709a9dc40b406243ed

- alias: IK - Telegram - Addon  IDE Stop
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /ide_off
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Addon  IDE Stop - Triggered
  - service: hassio.addon_stop
    data:
      addon: a0d7b954_ide
  - service: notify.hassnico_bot
    data:
      message: Addon  IDE Stopped
  
  id: e17e1bf050034ad789250d6c110ee881
- alias: IK - Telegram - Addon  NodeRed Start
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /nodered_on
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Addon  NodeRed Start - Triggered
  - service: hassio.addon_start
    data:
      addon: a0d7b954_nodered
  - service: notify.hassnico_bot
    data:
      message: NodeRed is available at https://nico-casetta.duckdns.org:1880
  
  id: 74c5248c98f14ed0820ffe11bc3783a6
- alias: IK - Telegram - Addon  NodeRed Stop
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /nodered_off
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Addon  NodeRed Stop - Triggered
  - service: hassio.addon_stop
    data:
      addon: a0d7b954_nodered
  - service: notify.hassnico_bot
    data:
      message: Addon  NodeRed Stopped
  id: e15198a590af4101ac923b3787eb7d6c

- alias: Help
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /help
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Help sections
  - service: telegram_bot.send_message
    data_template:
      title: Help
      target: -189154344
      message: Look like you want to turn on or off your Addons. What you want to
        do?
      inline_keyboard:
      - Info Service Port:/info
  id: ef3df648d7f4471a820c96c0b31fb6f5

- alias: IK - Telegram - Help Info
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /info
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Help info - Triggered
  - service: notify.hassnico_bot
    data_template:
      message: "\n{{ \"\\U0001F4BB\" }} *Info*:\n------------------------------------------------\n\
        \ \n*HA*:   https://nico-casetta.duckdns.org:8123\n \n*SSH Web*:   https://nico-casetta.duckdns.org:7681\n\
        \ \n*Log Viewer*:   https://nico-casetta.duckdns.org:4277\n \n*Node Red*: \
        \  https://nico-casetta.duckdns.org:1880\n \n*Pi-Hole*:    https://nico-casetta.duckdns.org:4865"
      data:
        inline_keyboard:
        - '{{ "\u21a9\ufe0f" }} Control Panel:/stop'
  id: 6da100a00b0c42f1ba097145a470185f

- id: themes-sunset
  alias: Random Darker Theme At Sunset
  initial_state: true
  trigger:
    platform: sun
    event: sunset
  action:
  - service: frontend.set_theme
    data_template:
      name: '{{ ["darkcyan", "darkred", "midnight", "darkorange", "darkblue", "slate",
        "amoled", "material_dark_green", "material_dark_pink", "ios-dark-mode", "noctis"] | random  }}'

- id: themes-sunrise
  alias: Random Lighter Theme At Sunrise
  initial_state: true
  trigger:
    platform: sun
    event: sunrise
  action:
  - service: frontend.set_theme
    data_template:
      name: '{{ ["default", "slate", "amoled", "clear", "oxfordblue"] | random  }}'

- id: log-level
  alias: Log Level
  trigger:
    platform: state
    entity_id: input_select.log_level
  action:
    service: logger.set_level
    data_template:
      homeassistant.components: '{{ trigger.to_state.state }}'

- id: owntracks-refresh
  alias: Owntracks Refresh
  trigger:
  - platform: time_pattern
    minutes: /5
    seconds: 0
  action:
    service: script.owntracks_update

- id: family-coming-back
  alias: Family Coming Back to Home
  trigger:
    platform: state
    entity_id: group.family
    to: home
  action:
  - delay:
      seconds: 5
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: '{{ [ "Sono felice di rivedervi", "Bentornati a casa.", ] | random
        }}'
  # - service: rest_command.ss_home_on
  - service: notify.hassnico_bot
    data:
      message: >
       '{{ [
       "Qualcuno è tornato a casa",
       "Un Membro della gang è tornato a casa",
       "Un Membro della famiglia è tornato a casa",
        ] | random }}'
  - service: script.shutters_open_all

- id: family-going-out
  alias: Family Going Out
  trigger:
    platform: state
    entity_id: group.family
    to: not_home
  action:
  - delay:
      seconds: 5
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: '{{ [ "Mi Dispiace che ve ne andate", "Spero di rivedervi presto",
        ] | random }}'
  # - service: rest_command.ss_home_off
  - service: notify.hassnico_bot
    data:
      message: >
        '{{ [
        "Qualcuno è uscito da casa",
        "Qualcuno è uscito da casa",
        ] | random }}'
  - service: input_select.select_option
    data:
      entity_id: input_select.ac_state
      option: Power Off
  - service: cover.set_cover_position
    data:
      entity_id: cover.shelly_shsw_25_e6704f
      position: 22
  # - service: script.shutters_close_all
  - service: switch.turn_off
    data:
      entity_id: group.lights

#   id: 1ed32739e4b649659834ec85f0b01aa5
# - alias: IFTTT - Test Notification Received
#   initial_state: 'on'
#   trigger:
#     platform: event
#     event_type: ifttt_webhook_received
#     event_data:
#       action: call_service
#   action:
#     service_template: '{{ trigger.event.data.service }}'
#     data_template:
#       entity_id: '{{ trigger.event.data.entity_id }}'
  
#   id: f467e5667918486eb2b4168be00e7151
# - alias: IFTTT - Startup Notification
#   initial_state: 'on'
#   trigger:
#     platform: homeassistant
#     event: start
#   action:
#     service: ifttt.trigger
#     data:
#       event: HA_Start
#       value1: Hello World!
#   id: 8b228639aca84a4c8cfb52a558e78c45

# - alias: IFTTT - Startup Notification two
#   trigger:
#     platform: homeassistant
#     event: start
#   action:
#     service: script.ifttt_notify
#     data_template:
#       value1: 'HA Status:'
#       value2: '{{ trigger.event.data.entity_id.split('_')[1] }} is '
#       value3: '{{ trigger.event.data.to_state.state }}'

- alias: 'Trigger alarm while armed away'
  trigger:
    - platform: state
      entity_id: sensor.pir1
      to: 'active'
    - platform: state
      entity_id: sensor.pir2
      to: 'active'
    - platform: state
      entity_id: sensor.door
      to: 'open'
    - platform: state
      entity_id: sensor.window
      to: 'open'
  condition:
    - condition: state
      entity_id: alarm_control_panel.ha_alarm
      state: armed_away
  action:
    service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.ha_alarm
  id: 7c7986eba7f94410b400ad0045ccbdfd

- alias: 'Send notification when alarm triggered'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.ha_alarm
      to: 'triggered'
  action:
    - service: notify.hassnico_bot
      data:
        message: "ALARM! The alarm has been triggered"
  id: e3c9600df6f343e4ad010a7f900b49ab

- alias: 'Disarm alarm when door unlocked by keypad'
  trigger:
    - platform: state
      entity_id: sensor.front_door_lock_alarm_type
      to: '19'
      # many z-wave locks use Alarm Type 19 for 'Unlocked by Keypad'
  action:
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.house_alarm
  id: 57977b7dd37745728b3c4152539729ac

- alias: 'Send notification when alarm is Disarmed'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'disarmed'
  action:
    - service: notify.hassnico_bot
      data_template:
        message: "ALARM! The alarm is Disarmed at {{ states('sensor.date_time') }}"
  id: 00f3f26d34f44c50abbd18593c3bf3c3

- alias: 'Send notification when alarm is in pending status'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'pending'
  action:
    - service: notify.hassnico_bot
      data_template:
        message: "ALARM! The alarm is in pending status at {{ states('sensor.date_time') }}"
  id: 1e98346fd2a54596bf1dfbf642589a30

- alias: 'Send notification when alarm is Armed in Away mode'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'armed_away'
  action:
    - service: notify.hassnico_bot
      data_template:
        message: "ALARM! The alarm is armed in Away mode {{ states('sensor.date_time') }}"
  id: 838cf4d3b1c843e1a04b9faada033e85

- alias: 'Send notification when alarm is Armed in Home mode'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'armed_home'
  action:
    - service: notify.hassnico_bot
      data_template:
        # Using multi-line notation allows for easier quoting
        message: >
          ALARM! The alarm is armed in Home mode {{ states('sensor.date_time') }}
  id: d624aa68bbde45bcaa2c11c7a6ef40ed

- alias: Weekly Backup Friday at 3 AM
  initial_state: 'on'
  trigger:
    platform: time
    at: 03:00:00
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: hassio.snapshot_full
    data_template:
      name: Automated Backup {{ now().strftime('%Y-%m-%d') }}
  - service: notify.hassnico_bot
    data_template:
      message: Creating backup named "Automated Backup {{ now().strftime('%Y-%m-%d') }}"
  id: d316d840e9fd4ebdbc748b2419853558

- alias: Weekly Backup to Google Friday at 3:30 AM
  initial_state: 'on'
  trigger:
    platform: time
    at: 03:30:00
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: rest_command.google_backup
  id: 4df385d2bced4f73adb6b7e872261e8f

- alias: Earth Quake Alert
  trigger:
    platform: geo_location
    source: usgs_earthquakes_feed
    zone: zone.earth_quake_alert_zone
    event: enter
  condition:
    condition: template
    value_template: "{{ trigger.to_state.attributes.type == 'earthquake' }}"
  action:
  - service: persistent_notification.create
    data_template:
      message: "{{ trigger.to_state.name }} - {{ trigger.to_state.attributes.status }}"
      title: Earth Quake Alert
  - service: notify.hassnico_bot
    data_template:
      message: ALARM! Earth Quake Detected {{ states('sensor.date_time') }}
  - service: hassio.addon_stdin
    data_template:
      addon: 89275b70_dss_voip
      input:
        call_sip_uri: sip:+393402703738@sip.voipcheap.com
        message_tts: Allerta, E' stato registrato un Terremoto con intensità superiore a 4
  id: 098391ffd0574f8babccb9fcb4083568

- alias: Set Living Room Cover position
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: input_number.living_room_cover
  action:
  - service: cover.set_cover_position
    entity_id: cover.shelly_shsw_25_e6704f
    data:
      position: "{{ states('input_number.living_room_cover') | int }}"
  id: 140b23ad91dc4fb599916029df40042a

- alias: Flood Sensor - Notification
  id: e495de65acc84b3abad35bf92a9505fb
  initial_state: 'on'
  trigger:
    platform: template
    value_template: "{{ is_state_attr('sensor.shelly_shwt_1_694834_flood', 'flood', 'true') }}"
  action:
  - service: notify.hassnico_bot
    data:
      message: C'è una perdita d'acqua in magazzino
  - service: media_player.volume_set
    data:
      entity_id: media_player.nicolo_s_2nd_bose_home_speaker_500
      volume_level: 0.3
  - delay: 00:00:20
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
        {{ [ 
        "C'è una perdita d'acqua in magazzino controllare per terra vicino alla lavatrice",
        "C'è una perdita d'acqua in magazzino controllare per terra vicino alla lavatrice",
        ] | random }}

- id: nico-birthday-tomorrow
  alias: Birthday Nico Tomorrow
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.birthday_nico
    above: 0
    below: 2
  action:
  - service: notify.hassnico_bot
    data_template:
      message: "Domani è il compleanno di Nico"
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
               {{ [
                "Domani è il compleanno di Nico",
                "Domani è il compleanno di Nico",
                "Domani è il compleanno di Nico",
                "Domani è il compleanno di Nico",
                "Domani è il compleanno di Nico",
               ] | random }}

- id: nico-birthday-today
  alias: Birthday Nico Today
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.birthday_nico
    below: 1
  - platform: time_pattern
    hours: 08
    minutes: /55
    seconds: '00'
  condition:
    condition: and
    conditions:
    - condition: sun
      before: sunset
    - condition: sun
      after: sunrise
    - condition: numeric_state
      entity_id: sensor.birthday_nico
      below: 1
  action:
  - service: notify.hassnico_bot
    data_template:
      message: 'Oggi è il compleanno di Nico'
  - service: script.alexascriptbirthday_ita

- id: maria-birthday-tomorrow
  alias: Birthday Maria Tomorrow
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.birthday_mascia
    above: 0
    below: 2
  action:
  - service: notify.hassnico_bot
    data_template:
      message: 'Domani è il compleanno di Nico'
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: '{{ [ 
                "Domani è il compleanno di Maria",
                "Domani è il compleanno di Maria",
                ] | random }}'

- id: maria-birthday-today
  alias: Birthday Maria Today
  initial_state: 'on'
  trigger:
  - platform: time_pattern
    hours: 08
    minutes: /55
    seconds: '00'
  condition:
    condition: and
    conditions:
    - condition: sun
      before: sunset
    - condition: sun
      after: sunrise
    - condition: numeric_state
      entity_id: sensor.birthday_mascia
      below: 1
  action:
  - service: notify.hassnico_bot
    data_template:
      message: 'Oggi è il compleanno di Maria'
  - service: script.alexascriptbirthday_ita

- id: '157606988564489'
  alias: Notification Test Weekly TTS
  initial_state: 'on'
  trigger:
    platform: time
    at: '20:00:00'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    - service: notify.alexa_media
      data:
        target: 
          - media_player.nicolo_s_2nd_bose_home_speaker_500
          - media_player.echo_dot_di_nicolo
        #title: "My title for Echo show"
        data:
          type: announce
          #method: all
        message: "Questo è un test settimanale per il sistema di annunci Alexa."

- id: '1576069885644898'
  alias: Alexa Volume Quiet
  initial_state: 'on'
  trigger:
    platform: time
    at: '00:45:00'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
    - sun
  action:
    # - service: media_player.volume_set
    #   data:
    #     entity_id: media_player.nico_bose_home
    #     volume_level: 0.1
    - service: input_select.select_option
      data:
        entity_id: input_select.alexa_volume
        option: Quiet

- id: '1576069885644890'
  alias: Alexa Volume Normal
  initial_state: 'on'
  trigger:
    platform: time
    at: '09:00:00'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
    - sun
  action:
    # - service: media_player.volume_set
    #   data:
    #     entity_id: media_player.nico_bose_home
    #     volume_level: 0.2
    - service: input_select.select_option
      data:
        entity_id: input_select.alexa_volume
        option: Normal

- id: '1576069885644899'
  alias: Alexa Volume Movie
  initial_state: 'on'
  trigger:
    platform: time
    at: '20:00:00'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
    - sun
  action:
    # - service: media_player.volume_set
    #   data:
    #     entity_id: media_player.nico_bose_home
    #     volume_level: 0.3
    - service: input_select.select_option
      data:
        entity_id: input_select.alexa_volume
        option: Movie

- id: alexa-volume-quiet
  alias: Alexa Volume Quiet - Notification
  trigger:
    platform: state
    entity_id: input_select.alexa_volume
    to: Quiet
  action:
  - service: media_player.volume_set
    data:
      entity_id: media_player.nico_bose_home
      volume_level: 0.1
  - service: media_player.volume_set
    data:
      entity_id: media_player.nicolo_s_2nd_bose_home_speaker_500
      volume_level: 0.1
  - service: media_player.volume_set
    data:
      entity_id: media_player.echo_dot_di_nicolo
      volume_level: 0.2

  - service: notify.hassnico_bot
    data_template:
      message: 'Alexa Volume is {{ trigger.to_state.state }}'

- id: alexa-volume-normal
  alias: Alexa Volume Normal - Notification
  trigger:
    platform: state
    entity_id: input_select.alexa_volume
    to: Normal
  action:
  - service: media_player.volume_set
    data:
      entity_id: media_player.nico_bose_home
      volume_level: 0.2
  - service: media_player.volume_set
    data:
      entity_id: media_player.nicolo_s_2nd_bose_home_speaker_500
      volume_level: 0.2
  - service: media_player.volume_set
    data:
      entity_id: media_player.echo_dot_di_nicolo
      volume_level: 0.4
  - service: notify.hassnico_bot
    data_template:
      message: 'Alexa Volume is {{ trigger.to_state.state }}'

- id: alexa-volume-Movie
  alias: Alexa Volume Movie - Notification
  trigger:
    platform: state
    entity_id: input_select.alexa_volume
    to: Movie
  action:
  - service: media_player.volume_set
    data:
      entity_id: media_player.nico_bose_home
      volume_level: 0.3
  - service: media_player.volume_set
    data:
      entity_id: media_player.nicolo_s_2nd_bose_home_speaker_500
      volume_level: 0.3
  - service: media_player.volume_set
    data:
      entity_id: media_player.echo_dot_di_nicolo
      volume_level: 0.5
  - service: notify.hassnico_bot
    data_template:
      message: 'Alexa Volume is {{ trigger.to_state.state }}'

### Google cast ###


- id: cast-to-hub
  alias: Cast to Hub
  trigger: 
    - platform: state
      entity_id: media_player.cucina
      to: 'idle'
      for:
        minutes: 1
  action:
    - service: script.cast_on_kitchen

- id: cast-to-hub2
  alias: Cast to Hub
  trigger: 
    - platform: state
      entity_id: media_player.cucina
      to: 'on'
      for:
        minutes: 1
  action:
    - service: script.cast_on_kitchen


- id: energy-tarrif
  alias: Tariff Energy
  trigger:
    - platform: time
      at: '07:00:00'
    - platform: time
      at: '19:00:00'
  action:
    - service: utility_meter.next_tariff
      entity_id: utility_meter.daily_energy
    - service: utility_meter.next_tariff
      entity_id: utility_meter.monthly_energy


# ###################################
# #### Air conditioner Routines #####
# ###################################

# ### AC Power Off Routine and Self Shutdown

- id: ac-state-shutdown
  alias: AC state Shutdown
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - switch.air
    - switch.air2
    - switch.air3
    to: 'off'
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.ac_state
      option: Power Off

- id: ac-self-shutdown
  alias: AC Self Shutdown
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - switch.air
    - switch.air2
    to: 'on'
    for: 03:00:00
  - platform: state
    entity_id:
    - switch.air3
    to: 'on'
    for: 03:00:00
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.ac_state
      option: Power Off
  - service: switch.turn_off
    data_template:
      entity_id: ' {{ trigger.entity_id }} '
  - service: notify.hassnico_bot
    data_template:
      #message: "{{ trigger.to_state.attributes.friendly_name }} just changed from {{ trigger.to_state.state }} to {{ trigger.from_state.state }} - AC Self Shutdown Notify"
      message: '"Self Shutdown Notify - {{ trigger.to_state.attributes.friendly_name }} just changed from
        {{ trigger.to_state.state }} to {{ trigger.from_state.state }}."'
  - delay: 00:00:03
  - service: notify.alexa_media
    data:
      target:
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
         {{ [
         "Risparmio Energetico attivato, ora spengo il condizionatore",
         "L'aria condizionata è stata spenta automaticamente",
         "Risparmio energetico attivo, spengo il condizonatore",       
         ] | random }}

- id: scene-ac-power-off
  alias: AC Scene Power Off - Notification
  trigger:
    platform: state
    entity_id: input_select.ac_state
    to: Power Off
  action:
  - service: switch.turn_off
    entity_id: switch.air2
  - delay:
      seconds: 10
  - service: switch.turn_off
    entity_id: switch.air
  - delay:
      seconds: 10
  - service: switch.turn_off
    entity_id: switch.air3
  - service: notify.hassnico_bot
    data_template:
      message: 'AC is on Mode: {{ trigger.to_state.state }}'
  - service: notify.hassnico_bot
    data:
      message: L'aria condizionata è stata Spenta (Power Off Mode)
  # - service: notify.alexa_media
  #   data:
  #     target:
  #     # - media_player.nico_bose_home
  #     - media_player.nicolo_s_2nd_bose_home_speaker_500
  #     data:
  #       type: tts
  #     message: >
  #      {{ [
  #      "Ho spento l'aria condizionata",
  #      "L'aria condizionata è stata spenta",
  #      ] | random }}

- id: ac-status-change-to-off
  alias: AC Status Change to OFF
  trigger:
    platform: state
    entity_id:
    - switch.air
    - switch.air2
    - switch.air3
    to: 'off'
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.ac_state
      option: Power Off
  - service: notify.hassnico_bot
    data_template:
      message: '"Status Change Notify - {{ trigger.to_state.attributes.friendly_name }} just changed from
        {{ trigger.to_state.state }} to {{ trigger.from_state.state }}."'

#### AC Spring Routine ###

- id: scene-spring-high-temperature-notify
  alias: AC Spring High temperature - Notification
  initial_state: 'on'
  trigger:
    - platform: numeric_state
      entity_id: sensor.termosifone_cucina_temperature
      above: 23
    # - platform: time
    #   at: "09:00:00"
    - platform: time_pattern
    # You can also match on interval. This will match every 30 minutes
      minutes: "/15"
  condition:
    # - condition: template
    #   value_template: "{{ is_state('sensor.season', 'spring') }}"
    - condition: state
      entity_id: sensor.season
      state: 'spring'
    - condition: numeric_state
      entity_id: 'sensor.shelly_shem_b9ee2d_1_current_consumption'
      below: 2000
    - condition: state
      entity_id: group.family
      state: home
    - condition: numeric_state
      entity_id: sensor.indice_thom_salone
      above: 23
    - condition: time
      after: '08:00:00'
      before: '22:00:00'
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.ac_state
      option: Spring

- id: scene-spring-low-temperature-notify
  alias: AC Spring low temperature - Notification
  initial_state: 'on'
  trigger:
    - platform: numeric_state
      entity_id: sensor.indice_thom_salone
      below: 21
    # - platform: time
    #   at: "09:00:00"
    - platform: time_pattern
    # You can also match on interval. This will match every 30 minutes
      minutes: "/30"
  condition:
    condition: and
    conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.ac_mode
          state: 'Manual'
      - condition: and
        conditions:
        - condition: template
          value_template: "{{ is_state('sensor.season', 'spring') }}"
        - condition: numeric_state
          entity_id: 'sensor.shelly_shem_b9ee2d_1_current_consumption'
          below: 2000
        - condition: state
          entity_id: group.family
          state: home
        - condition: numeric_state
          entity_id: sensor.indice_thom_salone
          above: 23
        - condition: time
          after: '08:00:00'
          before: '22:00:00'
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          - sun
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.ac_state
      option: Power Off
  - service: notify.hassnico_bot
    data:
      message: E' Stata raggiunta la soglia di benessere dell'indicatore Thom (Spring Mode)


- id: scene-ac-spring
  alias: AC Scene Spring - Notification
  trigger:
    platform: state
    entity_id: input_select.ac_state
    to: Spring
  action:
  - service: switch.turn_on
    entity_id: switch.air2
  - delay:
      seconds: 10
  - service: switch.turn_on
    entity_id: switch.air2
  - service: notify.hassnico_bot
    data_template:
      message: 'AC is on Spring Mode: {{ trigger.to_state.state }}'
  - service: notify.hassnico_bot
    data:
      message: L'aria condizionata è stata attiva in Salotto (Spring Mode)
  - service: notify.hassnico_bot
    data:
      message: La temperatura ha superato il limite prefissato di 27 gradi (Spring Mode)
  - service: notify.alexa_media
    data:
      target:
      # - media_player.nico_bose_home
      - media_player.nicolo_s_2nd_bose_home_speaker_500
      data:
        type: tts
      message: >
       {{ [
       "Ho notato che in Salone fa troppo caldo. Accendo l'aria condizionata per rinfrascarre l'aria",
       "Mamma mia che caldo, accendo l'aria condizionata",       
       ] | random }}



#### AC Summer Routine ###

# - id: scene-summer-high-temperature-notify
#   alias: AC Summer High temperature - Notification
#   initial_state: 'on'
#   trigger:
#     - platform: numeric_state
#       entity_id: sensor.indice_thom_salone
#       above: 23
#     # - platform: time
#     #   at: "08:00:00"
#     - platform: time_pattern
#     # You can also match on interval. This will match every 30 minutes
#       minutes: "/30"
#   condition:
#     # - condition: template
#     #   value_template: "{{ is_state('sensor.season', 'summer') }}"
#     - condition: state
#       entity_id: sensor.season
#       state: 'summer'
#     - condition: numeric_state
#       entity_id: 'sensor.shelly_shem_b9ee2d_1_current_consumption'
#       below: 2000
#     - condition: state
#       entity_id: group.family
#       state: home
#     - condition: numeric_state
#       entity_id: sensor.indice_thom_salone
#       above: 23
#     - condition: time
#       after: '08:00:00'
#       before: '22:00:00'
#       weekday:
#       - mon
#       - tue
#       - wed
#       - thu
#       - fri
#       - sat
#       - sun
#   action:
#   - service: input_select.select_option
#     data:
#       entity_id: input_select.ac_state
#       option: Summer

- id: scene-summer-high-temperature-notify
  alias: AC Summer High temperature - Notification
  initial_state: 'on'
  trigger:
    - platform: numeric_state
      entity_id: sensor.indice_thom_salone
      above: 23
    - platform: time_pattern
      minutes: "/5"
  condition:
    condition: and
    conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.ac_mode
          state: 'Manual'
      - condition: and
        conditions:
        - condition: state
          entity_id: sensor.season
          state: 'summer'
        - condition: numeric_state
          entity_id: 'sensor.shelly_shem_b9ee2d_1_current_consumption'
          below: 2000
        - condition: state
          entity_id: group.family
          state: home
        - condition: numeric_state
          entity_id: sensor.indice_thom_salone
          above: 23
        - condition: time
          after: '06:00:00'
          before: '22:00:00'
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          - sun
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.ac_state
      option: Summer


- id: scene-summer-low-temperature-notify
  alias: AC Summer low temperature - Notification
  initial_state: 'on'
  trigger:
    - platform: numeric_state
      entity_id: 'sensor.indice_thom_salone'
      below: 22
    - platform: time
      at: "08:00:00"
  condition:
    - condition: template
      value_template: "{{ is_state('sensor.season', 'summer') }}"
    - condition: state
      entity_id: group.family
      state: home
    - condition: numeric_state
      entity_id: 'sensor.indice_thom_salone'
      below: 22
    - condition: time
      after: '08:00:00'
      before: '22:00:00'
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.ac_state
      option: Power Off
  - service: notify.hassnico_bot
    data:
      message: E' Stata raggiunta la soglia di benessere dell'indicatore Thom (Summer Mode)


- id: scene-ac-summer
  alias: AC Scene Summer - Notification
  trigger:
    platform: state
    entity_id: input_select.ac_state
    to: Summer
  action:
  - service: switch.turn_on
    entity_id: switch.air2
  - delay:
      seconds: 10
  - service: switch.turn_on
    entity_id: switch.air2
  - service: notify.hassnico_bot
    data_template:
      message: 'AC is on summer Mode: {{ trigger.to_state.state }}'
  - service: notify.hassnico_bot
    data:
      message: L'aria condizionata è stata attiva in Salotto (Summer Mode)
  # - service: notify.alexa_media
  #   data:
  #     target:
  #     # - media_player.nico_bose_home
  #     - media_player.nicolo_s_2nd_bose_home_speaker_500
  #     data:
  #       type: tts
  #     message: >
  #      {{ [
  #      "Ho notato che in Salone fa troppo caldo. Accendo l'aria condizionata per rinfrascarre l'aria",
  #      "Che caldo, accendo l'aria condizionata",       
  #      ] | random }}
